.TH "trash.c" 3 "Mon Apr 1 2019" "PROJET_S4" \" -*- nroff -*-
.ad l
.nh
.SH NAME
trash.c
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBbitToHexa\fP (\fBblock_t\fP monBloc, char *nbHexa)"
.br
.RI "prend un tableau de 4 octets (char) et le transforme en Hexadecimal "
.ti -1c
.RI "void \fBoctetsToHexa\fP (\fBblock_t\fP monBloc, char *nbHexa)"
.br
.RI "prend un tableau de 4 octets (char) et le transforme en Hexadecimal assert(monBloc[i]<256); "
.ti -1c
.RI "\fBwhile\fP ((\fBlecture\fP=readdir(\fBrep\fP)))"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "struct dirent * \fBlecture\fP"
.br
.ti -1c
.RI "char * \fBnomFichiers\fP = (char*)malloc(sizeof(nomFichiers)*10)"
.br
.ti -1c
.RI "int \fBnbDisk\fP = 0"
.br
.ti -1c
.RI "\fBrep\fP = opendir(nomRep)"
.br
.ti -1c
.RI "\fBr5Disk\fP = (\fBvirtual_disk_t\fP*)malloc(sizeof(\fBvirtual_disk_t\fP))"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "void bitToHexa (\fBblock_t\fP monBloc, char * nbHexa)"

.PP
prend un tableau de 4 octets (char) et le transforme en Hexadecimal 
.PP
\fBParameters:\fP
.RS 4
\fI\fP block_t (Contient le tableau de bits) 
.br
\fI\fP char* (Caractere dans lequel on met l'hexa) 
.RE
.PP
\fBReturns:\fP
.RS 4
: void 
.RE
.PP

.PP
Definition at line 11 of file trash\&.c\&.
.SS "void octetsToHexa (\fBblock_t\fP monBloc, char * nbHexa)"

.PP
prend un tableau de 4 octets (char) et le transforme en Hexadecimal assert(monBloc[i]<256); 
.PP
\fBParameters:\fP
.RS 4
\fI\fP block_t (Contient le tableau de bits) 
.br
\fI\fP char* (Caractere dans lequel on met l'hexa) 
.RE
.PP
\fBReturns:\fP
.RS 4
: void 
.RE
.PP

.PP
Definition at line 42 of file trash\&.c\&.
.SS "while ((\fBlecture\fP=readdir(\fBrep\fP)))"

.PP
Definition at line 104 of file trash\&.c\&.
.SH "Variable Documentation"
.PP 
.SS "struct dirent* lecture"

.PP
Definition at line 99 of file trash\&.c\&.
.SS "int nbDisk = 0"

.PP
Definition at line 101 of file trash\&.c\&.
.SS "nomFichiers = (char*)malloc(sizeof(nomFichiers)*10)"

.PP
Definition at line 100 of file trash\&.c\&.
.SS "r5Disk = (\fBvirtual_disk_t\fP*)malloc(sizeof(\fBvirtual_disk_t\fP))"

.PP
Definition at line 108 of file trash\&.c\&.
.SS "DIR * rep = opendir(nomRep)"

.PP
Definition at line 103 of file trash\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for PROJET_S4 from the source code\&.
